pipeline {
    agent any

    tools {
        nodejs 'Nodejs' // Change this to match your tool name in Jenkins
    }

    environment {
        DEFAULT_RECIPIENTS = '230466@students.au.edu.pk'  // Set to your team or Gmail
        MIN_COVERAGE = '80'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install & Test') {
            steps {
                sh 'npm ci'
                sh 'npm test'
            }
            post {
                always {
                    junit 'coverage/junit.xml'
                    cobertura coberturaReportFile: 'coverage/cobertura-coverage.xml',
                              lineCoverageTargets: "${env.MIN_COVERAGE},${env.MIN_COVERAGE},${env.MIN_COVERAGE}"
                }
            }
        }

        stage('Lint Check') {
            steps {
                sh 'npm run lint'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Archive if Release Tag') {
            when {
                allOf {
                    branch 'main'
                    tag pattern: "release.*", comparator: "REGEXP"
                }
            }
            steps {
                archiveArtifacts artifacts: 'dist/**', fingerprint: true
            }
        }
    }

    post {
        success {
            emailext(
                subject: "✅ SUCCESS - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                to: "${env.DEFAULT_RECIPIENTS}",
                body: """Build succeeded!

✔ Job: ${env.JOB_NAME}
✔ Branch: ${env.BRANCH_NAME}
✔ Build: ${env.BUILD_URL}
"""
            )
        }
        failure {
            emailext(
                subject: "❌ FAILURE - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                to: "${env.DEFAULT_RECIPIENTS}",
                body: """Build failed.

✘ Job: ${env.JOB_NAME}
✘ Branch: ${env.BRANCH_NAME}
✘ URL: ${env.BUILD_URL}

Please check the console output for details.
"""
            )
        }
    }
}
